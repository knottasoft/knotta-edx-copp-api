version: '3'
services:
  db:
    image: docker.io/mysql:5.7.33
    container_name: db
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci --default-authentication-plugin=mysql_native_password
    ports:
      - 3306:3306
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: "password"
      MYSQL_USER: "knotta"
      MYSQL_PASSWORD: "password"
      MYSQL_DATABASE: "database"
    volumes:
      - db-data:/var/lib/mysql

  web:
    build:
      context: .
      args:
        REQUIREMENTS_FILE: dev.txt
    container_name: web
    restart: always
    ports:
      - 8010:8000
    env_file: .env
    command: 'sh -c "./manage.py migrate && ./manage.py runserver 0.0.0.0:8000"'
    volumes:
      - ./:/app
    depends_on:
      - db
      - minio

  queue:
    build:
      context: .
      args:
        REQUIREMENTS_FILE: dev.txt
    container_name: queue
    restart: unless-stopped
    env_file: .env
    command: sh /entrypoint-queue.sh
    depends_on:
      - db
    volumes:
      - ./:/app

  beat:
    build:
      context: .
      args:
        REQUIREMENTS_FILE: dev.txt
    container_name: beat
    restart: unless-stopped
    env_file: .env
    command: sh /entrypoint-beat.sh
    depends_on:
      - db
    volumes:
      - ./:/app

  redis:
    image: redis:alpine
    restart: unless-stopped
    container_name: redis
    ports:
      - 6379:6379

  mailhog:
    image: mailhog/mailhog:latest
    restart: always
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025

  minio:
    container_name: minio
    image: docker.io/minio/minio
    command: server --address "0.0.0.0:9000"  --console-address "0.0.0.0:9001" /data
    environment:
      MINIO_ROOT_USER: knotta
      MINIO_ROOT_PASSWORD: knottapass
      MINIO_BROWSER_REDIRECT_URL: http://console.minio.local.knotta.ru
      MINIO_SERVER_URL: http://minio:9000
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio-data:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-job:
    container_name: minio-job
    image: docker.io/minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc mc config host add minio http://minio:9000 knotta knottapass --api s3v4;
      /usr/bin/mc mb --ignore-existing minio/public minio/files minio/videos;
      /usr/bin/mc policy set public minio/public;
      "
  caddy:
    container_name: caddy
    image: docker.io/caddy:2.3.0
    restart: unless-stopped
    ports:
      - 80:80
      #- 443:443
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy-data:/data

  nginx:
    container_name: nginx
    image: docker.io/nginx:1.19.9
    restart: unless-stopped
    volumes:
      - ./nginx-dev.conf:/etc/nginx/conf.d/nginx-dev.conf:ro
    depends_on:
      - web

volumes:
  db-data:
    external: false
  minio-data:
    external: false
  caddy-data:
    external: false
  radis-data:
    external: false